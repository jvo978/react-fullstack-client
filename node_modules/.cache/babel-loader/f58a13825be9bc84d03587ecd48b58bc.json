{"ast":null,"code":"var _jsxFileName = \"/Users/jasonvo/Code/react-fullstack/client/src/routes/ChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport '../css/ChangePassword.css';\nimport { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../helpers/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChangePassword() {\n  _s();\n\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const {\n    authState\n  } = useContext(AuthContext);\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (!localStorage.getItem('accessToken')) {\n      navigate('/login');\n    }\n  }, [authState.status]);\n\n  const changePassword = () => {\n    axios.put('http://localhost:3001/auth/changepassword', {\n      oldPassword: oldPassword,\n      newPassword: newPassword\n    }, {\n      headers: {\n        accessToken: localStorage.getItem('accessToken')\n      }\n    }).then(response => {\n      if (response.data.error) {\n        alert(response.data.error);\n        setOldPassword('');\n        setNewPassword('');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Old Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: oldPassword,\n        type: \"password\",\n        placeholder: \"Old Password...\",\n        onChange: e => {\n          setOldPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newPassword,\n        type: \"password\",\n        placeholder: \"New Password...\",\n        onChange: e => {\n          setNewPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changePassword,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChangePassword, \"jjy4nbSrwaapsTFpXiqclugDG5Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/Users/jasonvo/Code/react-fullstack/client/src/routes/ChangePassword.js"],"names":["useState","useEffect","useContext","AuthContext","useNavigate","axios","ChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","authState","navigate","localStorage","getItem","status","changePassword","put","headers","accessToken","then","response","data","error","alert","e","target","value"],"mappings":";;;AAAA,OAAO,2BAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AAEtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAgBT,UAAU,CAACC,WAAD,CAAhC;AAEA,MAAIS,QAAQ,GAAGR,WAAW,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACY,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAL,EAA0C;AACtCF,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACH;AACJ,GAJQ,EAIN,CAACD,SAAS,CAACI,MAAX,CAJM,CAAT;;AAMA,QAAMC,cAAc,GAAG,MAAM;AACzBX,IAAAA,KAAK,CAACY,GAAN,CAAU,2CAAV,EAAuD;AAAEV,MAAAA,WAAW,EAAEA,WAAf;AAA4BE,MAAAA,WAAW,EAAEA;AAAzC,KAAvD,EAA+G;AAAES,MAAAA,OAAO,EAAE;AACtHC,QAAAA,WAAW,EAAEN,YAAY,CAACC,OAAb,CAAqB,aAArB;AADyG;AAAX,KAA/G,EAEIM,IAFJ,CAEUC,QAAD,IAAc;AACnB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAlB,EAAyB;AACrBC,QAAAA,KAAK,CAACH,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAL;AACAf,QAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,QAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,KARD;AASH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,KAAK,EAAEH,WAAd;AAA2B,QAAA,IAAI,EAAC,UAAhC;AAA2C,QAAA,WAAW,EAAC,iBAAvD;AAAyE,QAAA,QAAQ,EAAGkB,CAAD,IAAO;AAAEjB,UAAAA,cAAc,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAgC;AAA5H;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,KAAK,EAAElB,WAAd;AAA2B,QAAA,IAAI,EAAC,UAAhC;AAA2C,QAAA,WAAW,EAAC,iBAAvD;AAAyE,QAAA,QAAQ,EAAGgB,CAAD,IAAO;AAAEf,UAAAA,cAAc,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAA+B;AAA3H;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,OAAO,EAAEX,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GArCQV,c;UAMUF,W;;;KANVE,c;AAuCT,eAAeA,cAAf","sourcesContent":["import '../css/ChangePassword.css'\nimport { useState, useEffect, useContext } from 'react'\nimport { AuthContext } from '../helpers/AuthContext'\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'\n\nfunction ChangePassword() {\n\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const { authState } = useContext(AuthContext)\n\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        if (!localStorage.getItem('accessToken')) {\n            navigate('/login')\n        }\n    }, [authState.status])\n\n    const changePassword = () => {\n        axios.put('http://localhost:3001/auth/changepassword', { oldPassword: oldPassword, newPassword: newPassword }, { headers: {\n            accessToken: localStorage.getItem('accessToken')\n        }}).then((response) => {\n            if (response.data.error) {\n                alert(response.data.error)\n                setOldPassword('')\n                setNewPassword('')\n            }\n        })\n    }\n\n    return (\n        <div className='password__container'>\n            <div className='password__form'>\n                <label>Old Password:</label>\n                <input value={oldPassword} type=\"password\" placeholder='Old Password...' onChange={(e) => { setOldPassword(e.target.value) }} />\n                <label>New Password:</label>\n                <input value={newPassword} type=\"password\" placeholder='New Password...' onChange={(e) => { setNewPassword(e.target.value)}} />\n                <button onClick={changePassword}>Save Changes</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ChangePassword\n"]},"metadata":{},"sourceType":"module"}