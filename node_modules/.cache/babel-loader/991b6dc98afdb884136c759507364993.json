{"ast":null,"code":"var _jsxFileName = \"/Users/jasonvo/Code/react-fullstack/client/src/routes/Home.js\",\n    _s = $RefreshSig$();\n\nimport '../css/Home.css';\nimport axios from 'axios';\nimport { useState, useEffect, useContext } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport { AuthContext } from \"../helpers/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [listOfPosts, setListOfPosts] = useState([]);\n  const [likedPosts, setLikedPosts] = useState([]);\n  const {\n    authState\n  } = useContext(AuthContext);\n  let navigate = useNavigate();\n  useEffect(() => {\n    if (!localStorage.getItem('accessToken')) {\n      navigate('/login');\n    } else {\n      axios.get(\"http://localhost:3001/posts\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        setListOfPosts(response.data.listOfPosts);\n        setLikedPosts(response.data.likedPosts.map(like => {\n          return like.PostId;\n        }));\n      });\n    }\n  }, [authState.status]);\n\n  const likeAPost = postId => {\n    axios.post(\"http://localhost:3001/likes\", {\n      PostId: postId\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      setListOfPosts(listOfPosts.map(post => {\n        if (post.id === postId) {\n          if (response.data.liked) {\n            return { ...post,\n              Likes: [...post.Likes, 0]\n            };\n          } else {\n            const likesArray = post.Likes;\n            likesArray.pop();\n            return { ...post,\n              Likes: likesArray\n            };\n          }\n        } else {\n          return post;\n        }\n      }));\n\n      if (likedPosts.includes(postId)) {\n        setLikedPosts(likedPosts.filter(id => {\n          return id !== postId;\n        }));\n      } else {\n        setLikedPosts([...likedPosts, postId]);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: listOfPosts.map((post, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_description\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__body\",\n          onClick: () => {\n            navigate(`/post/${post.id}`);\n          },\n          children: post.postText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${post.UserId}`,\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(ThumbUpIcon, {\n              onClick: () => {\n                likeAPost(post.id);\n              },\n              className: likedPosts.includes(post.id) ? \"unlikeBttn\" : \"likeBttn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: post.Likes.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"DAsXo1ClTQFCjjunNw5+1Whj368=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jasonvo/Code/react-fullstack/client/src/routes/Home.js"],"names":["axios","useState","useEffect","useContext","useNavigate","Link","ThumbUpIcon","AuthContext","Home","listOfPosts","setListOfPosts","likedPosts","setLikedPosts","authState","navigate","localStorage","getItem","get","headers","accessToken","then","response","data","map","like","PostId","status","likeAPost","postId","post","id","liked","Likes","likesArray","pop","includes","filter","key","title","postText","UserId","username","length"],"mappings":"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","sourcesContent":["import '../css/Home.css';\nimport axios from 'axios';\nimport { useState, useEffect, useContext } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport { AuthContext } from \"../helpers/AuthContext\"\n\nfunction Home() {\n    const [listOfPosts, setListOfPosts] = useState([]);\n    const [likedPosts, setLikedPosts] = useState([])\n    const { authState } = useContext(AuthContext)\n    let navigate = useNavigate();\n\n        useEffect(() => {\n          if (!localStorage.getItem('accessToken')) {\n            navigate('/login')\n          } else {\n            axios.get(\"http://localhost:3001/posts\", { \n              headers: { accessToken: localStorage.getItem(\"accessToken\")}\n            }).then((response) => {\n              setListOfPosts(response.data.listOfPosts)\n              setLikedPosts(response.data.likedPosts.map((like) => {\n                return like.PostId\n              }))\n            })\n          }\n        }, [authState.status]);\n\n    const likeAPost = (postId) => {\n      axios.post(\"http://localhost:3001/likes\", { PostId: postId}, { headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }}).then((response) => {\n        setListOfPosts(listOfPosts.map((post) => {\n          if (post.id === postId) {\n            if (response.data.liked) {\n              return { ...post, Likes: [...post.Likes, 0]}\n            } else {\n              const likesArray = post.Likes\n              likesArray.pop()\n              return { ...post, Likes: likesArray }\n            }\n          } else {\n            return post;\n          }\n        }))\n        if (likedPosts.includes(postId)) {\n          setLikedPosts(likedPosts.filter((id) => {\n            return id !== postId\n          }))\n        } else {\n          setLikedPosts([...likedPosts, postId])\n        }\n      })\n    }\n        \n    return (\n        <div className=\"post\">{listOfPosts.map((post, key) => {\n            return ( \n              <div className=\"post_description\">\n                <div className=\"post__title\">{post.title}</div>\n                <div className=\"post__body\" onClick={() => {\n                  navigate(`/post/${post.id}`)}}>\n                  {post.postText}\n                </div>\n                <div className=\"post__footer\">\n                  <div className='username'>\n                    <Link to={`/profile/${post.UserId}`}>{post.username}</Link>\n                  </div>\n                  <div className='buttons'>\n                    <ThumbUpIcon onClick={() => {\n                      likeAPost(post.id) }} \n                      className={ likedPosts.includes(post.id) ? \"unlikeBttn\" : \"likeBttn\" }\n                  />\n                  <label>{post.Likes.length}</label>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}