{"ast":null,"code":"var _jsxFileName = \"/Users/jasonvo/Code/react-fullstack/client/src/routes/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport '../css/CreatePost.css';\nimport { useContext, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../helpers/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatePost() {\n  _s();\n\n  const {\n    authState\n  } = useContext(AuthContext);\n  let navigate = useNavigate();\n  useEffect(() => {\n    console.log(authState);\n\n    if (!authState.status) {\n      navigate('/login');\n    }\n  }, [authState.status]);\n  const initialValues = {\n    title: \"\",\n    postText: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(),\n    postText: Yup.string().required()\n  });\n\n  const onSubmit = data => {\n    axios.post(\"http://localhost:3001/posts\", data, {\n      headers: {\n        accessToken: localStorage.getItem('accessToken')\n      }\n    }).then(() => {\n      navigate('/');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPost__container\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"createPost__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"title\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreatePost\",\n          name: \"title\",\n          placeholder: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Post: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"postText\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreatePost\",\n          name: \"postText\",\n          placeholder: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreatePost, \"zgaGtpBETaZqbbXe2PMhyqBenqM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/jasonvo/Code/react-fullstack/client/src/routes/CreatePost.js"],"names":["useContext","useEffect","Formik","Form","Field","ErrorMessage","Yup","axios","useNavigate","AuthContext","CreatePost","authState","navigate","console","log","status","initialValues","title","postText","validationSchema","object","shape","string","required","onSubmit","data","post","headers","accessToken","localStorage","getItem","then"],"mappings":";;;AAAA,OAAO,uBAAP;AACA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAgBX,UAAU,CAACS,WAAD,CAAhC;AACA,MAAIG,QAAQ,GAAGJ,WAAW,EAA1B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AACA,QAAI,CAACA,SAAS,CAACI,MAAf,EAAuB;AACnBH,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACH;AACJ,GALQ,EAKN,CAACD,SAAS,CAACI,MAAX,CALM,CAAT;AAOA,QAAMC,aAAa,GAAG;AAClBC,IAAAA,KAAK,EAAE,EADW;AAElBC,IAAAA,QAAQ,EAAE;AAFQ,GAAtB;AAKA,QAAMC,gBAAgB,GAAGb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmB;AACxCJ,IAAAA,KAAK,EAAEX,GAAG,CAACgB,MAAJ,GAAaC,QAAb,EADiC;AAExCL,IAAAA,QAAQ,EAAEZ,GAAG,CAACgB,MAAJ,GAAaC,QAAb;AAF8B,GAAnB,CAAzB;;AAKA,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACvBlB,IAAAA,KAAK,CAACmB,IAAN,CAAW,6BAAX,EAA0CD,IAA1C,EAAgD;AAAEE,MAAAA,OAAO,EAAE;AACvDC,QAAAA,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAD0C;AAAX,KAAhD,EAEIC,IAFJ,CAES,MAAM;AACTnB,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KAJL;AAKH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,aAAa,EAAEI,aAAvB;AAAsC,MAAA,gBAAgB,EAAEG,gBAAxD;AAA0E,MAAA,QAAQ,EAAEK,QAApF;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEQ,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFR,eAGQ,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,iBAAV;AAA4B,UAAA,IAAI,EAAC,OAAjC;AAAyC,UAAA,WAAW,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,gBAHR,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKQ,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBALR,eAMQ,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,iBAAV;AAA4B,UAAA,IAAI,EAAC,UAAjC;AAA4C,UAAA,WAAW,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,gBANR,eAOI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA5CQd,U;UAEUF,W;;;KAFVE,U;AA8CT,eAAeA,UAAf","sourcesContent":["import '../css/CreatePost.css';\nimport { useContext, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../helpers/AuthContext'\n\nfunction CreatePost() {\n    const { authState } = useContext(AuthContext)\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        console.log(authState)\n        if (!authState.status) {\n            navigate('/login')\n        }\n    }, [authState.status])\n\n    const initialValues = {\n        title: \"\",\n        postText: \"\"\n    }\n\n    const validationSchema = Yup.object().shape({\n        title: Yup.string().required(),\n        postText: Yup.string().required()\n    })\n\n    const onSubmit = (data) => {\n        axios.post(\"http://localhost:3001/posts\", data, { headers: {\n            accessToken: localStorage.getItem('accessToken')\n        }}).then(() => {\n              navigate('/');\n            })\n    }\n\n    return (\n        <div className=\"createPost__container\">\n            <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n                <Form className=\"createPost__form\">\n                    <label>Title: </label>\n                        <ErrorMessage name=\"title\" component=\"span\" />\n                        <Field id=\"inputCreatePost\" name=\"title\" placeholder=\"Title\" />\n                    <label>Post: </label>\n                        <ErrorMessage name=\"postText\" component=\"span\" />\n                        <Field id=\"inputCreatePost\" name=\"postText\" placeholder=\"Post\" />\n                    <button type=\"submit\">Create Post</button>\n                </Form>\n            </Formik>\n        </div>\n    )\n}\n\nexport default CreatePost\n"]},"metadata":{},"sourceType":"module"}